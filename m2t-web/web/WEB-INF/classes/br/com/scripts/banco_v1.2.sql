-- MySQL Script generated by MySQL Workbench
-- 05/23/15 22:35:23
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema vozlivr_model2gether
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema vozlivr_model2gether
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vozlivr_model2gether` DEFAULT CHARACTER SET utf8 ;
USE `vozlivr_model2gether` ;

-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`DiagramType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`DiagramType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL DEFAULT NULL,
  `email` VARCHAR(50) NULL,
  `login` VARCHAR(50) NULL DEFAULT NULL,
  `password` VARCHAR(20) NULL DEFAULT NULL,
  `preferencialModeDiagram` TINYINT(1) NULL DEFAULT NULL COMMENT '0 - Modo Grafico / 1 - Modo Textual',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Email_UNIQUE` (`email` ASC));


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`Diagram`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`Diagram` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `idDiagramType` INT NOT NULL,
  `idOwner` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Diagram_DiagramType_FK_IDX` (`idDiagramType` ASC),
  INDEX `Diagram_Owner_FK_IDX` (`idOwner` ASC),
  CONSTRAINT `Diagram_DiagramType_FK`
    FOREIGN KEY (`idDiagramType`)
    REFERENCES `vozlivr_model2gether`.`DiagramType` (`id`),
  CONSTRAINT `Diagram_Owner_FK`
    FOREIGN KEY (`idOwner`)
    REFERENCES `vozlivr_model2gether`.`User` (`id`)
    ON DELETE CASCADE);


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`Actor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `x` FLOAT NULL DEFAULT NULL,
  `y` FLOAT NULL DEFAULT NULL,
  `width` FLOAT NULL DEFAULT NULL,
  `height` FLOAT NULL,
  `idDiagram` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Actor_Diagram_FK_IDX` (`idDiagram` ASC),
  CONSTRAINT `Actor_Diagram_FK`
    FOREIGN KEY (`idDiagram`)
    REFERENCES `vozlivr_model2gether`.`Diagram` (`id`)
    ON DELETE CASCADE);


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`RelationElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`RelationElement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `elementType` VARCHAR(50) NULL COMMENT 'Ator / CasoDeUso',
  `idOrigin` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Element_ID_IDX` (`idOrigin` ASC));


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`Actor_RelationElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`Actor_RelationElement` (
  `idActor` INT NOT NULL,
  `idRelationElement` INT NOT NULL,
  PRIMARY KEY (`idActor`, `idRelationElement`),
  INDEX `RelationElement_ACT_FK_IDX` (`idRelationElement` ASC),
  INDEX `Actor_FK_IDX` (`idActor` ASC),
  CONSTRAINT `Actor_FK`
    FOREIGN KEY (`idActor`)
    REFERENCES `vozlivr_model2gether`.`Actor` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `RelationElement_ACT_FK`
    FOREIGN KEY (`idRelationElement`)
    REFERENCES `vozlivr_model2gether`.`RelationElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`UseCase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`UseCase` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `x` FLOAT NULL DEFAULT NULL,
  `y` FLOAT NULL DEFAULT NULL,
  `width` FLOAT NULL DEFAULT NULL,
  `height` FLOAT NULL,
  `idDiagram` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UseCase_Diagram_FK_IDX` (`idDiagram` ASC),
  CONSTRAINT `UseCase_Diagram_FK`
    FOREIGN KEY (`idDiagram`)
    REFERENCES `vozlivr_model2gether`.`Diagram` (`id`)
    ON DELETE CASCADE);


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`UseCase_RelationElement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`UseCase_RelationElement` (
  `idUseCase` INT NOT NULL,
  `idRelationElement` INT NOT NULL,
  PRIMARY KEY (`idUseCase`, `idRelationElement`),
  INDEX `RelationElement_UC_FK_IDX` (`idRelationElement` ASC),
  INDEX `UseCase_FK_IDX` (`idUseCase` ASC),
  CONSTRAINT `UseCase_FK`
    FOREIGN KEY (`idUseCase`)
    REFERENCES `vozlivr_model2gether`.`UseCase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `RelationElement_UC_FK`
    FOREIGN KEY (`idRelationElement`)
    REFERENCES `vozlivr_model2gether`.`RelationElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`RelationType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`RelationType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`Relation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sourceCardinality` VARCHAR(10) NULL,
  `targetCardinality` VARCHAR(10) NULL,
  `idRelationType` INT NOT NULL,
  `idSourceElement` INT NOT NULL,
  `idTargetElement` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Relation_TargetElement_FK_IDX` (`idTargetElement` ASC),
  INDEX `Relation_SourceElement_FK_IDX` (`idSourceElement` ASC),
  INDEX `Relation_RelationType_FK_IDX` (`idRelationType` ASC),
  CONSTRAINT `Relation_TargetElement_FK`
    FOREIGN KEY (`idTargetElement`)
    REFERENCES `vozlivr_model2gether`.`RelationElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Relation_SourceElement_FK`
    FOREIGN KEY (`idSourceElement`)
    REFERENCES `vozlivr_model2gether`.`RelationElement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Relation_RelationType_FK`
    FOREIGN KEY (`idRelationType`)
    REFERENCES `vozlivr_model2gether`.`RelationType` (`id`));


-- -----------------------------------------------------
-- Table `vozlivr_model2gether`.`DiagramCollaborator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vozlivr_model2gether`.`DiagramCollaborator` (
  `idUser` INT NOT NULL,
  `idDiagram` INT NOT NULL,
  INDEX `Diagram_ID_FK_IDX` (`idDiagram` ASC),
  INDEX `User_ID_FK_IDX` (`idUser` ASC),
  PRIMARY KEY (`idDiagram`, `idUser`),
  CONSTRAINT `Diagram_ID_FK`
    FOREIGN KEY (`idDiagram`)
    REFERENCES `vozlivr_model2gether`.`Diagram` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `User_ID_FK`
    FOREIGN KEY (`idUser`)
    REFERENCES `vozlivr_model2gether`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `vozlivr_model2gether`.`DiagramType`
-- -----------------------------------------------------
START TRANSACTION;
USE `vozlivr_model2gether`;
INSERT INTO `vozlivr_model2gether`.`DiagramType` (`name`) VALUES ('Caso de Uso');
INSERT INTO `vozlivr_model2gether`.`DiagramType` (`name`) VALUES ('Classe');

COMMIT;


-- -----------------------------------------------------
-- Data for table `vozlivr_model2gether`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `vozlivr_model2gether`;
INSERT INTO `vozlivr_model2gether`.`User` (`name`, `email`, `login`, `password`, `preferencialModeDiagram`) VALUES ('Leandro Luque', 'Leandro Luque.luccas@gmail.com', 'Leandro Luque', '123', 0);
INSERT INTO `vozlivr_model2gether`.`User` (`name`, `email`, `login`, `password`, `preferencialModeDiagram`) VALUES ('Leandro Luque', 'webdaves@gmail.com', 'Leandro Luque', '123', 0);
INSERT INTO `vozlivr_model2gether`.`User` (`name`, `email`, `login`, `password`, `preferencialModeDiagram`) VALUES ('Leandro', 'leandro.luque@gmail.com', 'Leandro', '123', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `vozlivr_model2gether`.`RelationType`
-- -----------------------------------------------------
START TRANSACTION;
USE `vozlivr_model2gether`;
INSERT INTO `vozlivr_model2gether`.`RelationType` (`name`) VALUES ('Comunicacao');
INSERT INTO `vozlivr_model2gether`.`RelationType` (`name`) VALUES ('Extend');
INSERT INTO `vozlivr_model2gether`.`RelationType` (`name`) VALUES ('Include');
INSERT INTO `vozlivr_model2gether`.`RelationType` (`name`) VALUES ('Generalizacao');

COMMIT;

